/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import com.mycompany.avanzada.Bodega;
import com.mycompany.avanzada.OrdenVenta;
import com.mycompany.avanzada.TipoProducto;
import java.io.FileNotFoundException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sashi
 */
public class ventanaEmitirReporte extends javax.swing.JFrame {
    Bodega bodega;
    /**
     * Creates new form ventanaVender
     */
    public ventanaEmitirReporte() {
        initComponents();
    }
    public void generarLista(){
        if(EleOrden.getSelectedItem() != null){
            OrdenVenta orden2 = new OrdenVenta();
            List<OrdenVenta> ordenes = bodega.getRep().getArrOrdenes();
            List<TipoProducto> car = new ArrayList<>();
            
            for (OrdenVenta orden : ordenes) {
                if (orden.getNroOrden() == Integer.parseInt(String.valueOf(EleOrden.getSelectedItem()))) {
                    orden2 = orden;  
                    car = orden.getCarro();
                }
            }
            
            Iterator<TipoProducto> it = car.iterator();
            TipoProducto now;
            DefaultListModel listModel = new DefaultListModel();
            while(it.hasNext()) {
                now = it.next();
                listModel.addElement("Producto: "+now.getNombre()+" "+now.getSeccion()+", Cantidad: "+now.getStock()+", Precio Unitario: $"+now.getPrecio());
            }
            jList.setModel(listModel);
            jList.setVisible(true);
   
            EleOrden.getSelectedItem();
            labelFecha.setText("Fecha : "+orden2.getFechaEmision_text());
            labelPFinal.setText("Precio total: $"+Integer.toString(orden2.getTotal()));
            TipoOrden.setText("Tipo de orden: "+orden2.getTipoOrden());
            
        }
        
    
    }
    public void init(Bodega bodega){
        this.bodega = bodega;
        this.generarComboBox1();
    }
    public void generarComboBox1(){
        List<OrdenVenta> arr = bodega.getRep().getArrOrdenes();
        String[] opciones = new String[arr.size()];
        Iterator<OrdenVenta> it = arr.iterator();
        OrdenVenta now;       
        int i = 0;
        while(it.hasNext()) {
     
            now = it.next();
            System.out.println(now.getFechaEmision_text());
            opciones[i] = String.valueOf(now.getNroOrden());
            i++;
	}
        EleOrden.setModel(new javax.swing.DefaultComboBoxModel(opciones));
        EleOrden.setSelectedIndex(-1);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BCerrar = new javax.swing.JButton();
        EleOrden = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        labelPFinal = new javax.swing.JLabel();
        labelFecha = new javax.swing.JLabel();
        TipoOrden = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        filtraFech = new javax.swing.JButton();
        fechaMinima = new com.toedter.calendar.JDateChooser();
        fechaMaxima = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        BCerrar.setText("X");
        BCerrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BCerrar.setContentAreaFilled(false);
        BCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCerrarActionPerformed(evt);
            }
        });

        EleOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        EleOrden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EleOrdenItemStateChanged(evt);
            }
        });
        EleOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EleOrdenActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList);

        jLabel1.setText("Filtrar Fechas:");

        filtraFech.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        filtraFech.setText("Filtrar");
        filtraFech.setToolTipText("");
        filtraFech.setBorder(new javax.swing.border.MatteBorder(null));
        filtraFech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtraFechActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPFinal)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EleOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(labelFecha))
                                    .addComponent(TipoOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filtraFech, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BCerrar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EleOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelFecha))
                    .addComponent(fechaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TipoOrden)
                    .addComponent(filtraFech, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(labelPFinal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCerrarActionPerformed
        try {
            // TODO add your handling code here:
            ppal ventana = new ppal();
            ventana.init(bodega);
            ventana.setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ventanaEnlistar.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_BCerrarActionPerformed

    private void EleOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EleOrdenActionPerformed
        // TODO add your handling code here:
        //GENERAR LISTA
    }//GEN-LAST:event_EleOrdenActionPerformed

    private void EleOrdenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EleOrdenItemStateChanged
        // TODO add your handling code here:
        //buscar reporte
        this.generarLista();
        
        
    }//GEN-LAST:event_EleOrdenItemStateChanged

    private void filtraFechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtraFechActionPerformed
        try {
            Date min= fechaMinima.getDate();
            Date max= fechaMaxima.getDate();
            if(min!=null && max!=null){
                generarComboBox1(min,max);
            }
            else JOptionPane.showMessageDialog(null, "Debe ingresar ambas fechas");
// TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(ventanaEmitirReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filtraFechActionPerformed
    
    public void generarComboBox1(Date min, Date max) throws ParseException{
        List<OrdenVenta> arr = bodega.getRep().getArrOrdenes();
        String[] opciones = new String[arr.size()];
        Iterator<OrdenVenta> it = arr.iterator();
        String pattern = "dd/MM/yyyy";
        SimpleDateFormat dateFormat = new SimpleDateFormat(pattern);
        OrdenVenta now;       
        int i = 0;
        while(it.hasNext()) {
            now = it.next();
            Date fecha = dateFormat.parse(now.getFechaEmision_text());
            System.out.println("fecha minima: "+min.toString()+" Fecha Maxima: "+max.toString()+" FechaAtual: "+ fecha.toString());
            if(fecha.after(min) && fecha.before(max)){
                System.out.println("pase");
                opciones[i] = String.valueOf(now.getNroOrden());
            }
            i++;
	}
        EleOrden.setModel(new javax.swing.DefaultComboBoxModel(opciones));
        EleOrden.setSelectedIndex(-1);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BCerrar;
    private javax.swing.JComboBox<String> EleOrden;
    private javax.swing.JLabel TipoOrden;
    private com.toedter.calendar.JDateChooser fechaMaxima;
    private com.toedter.calendar.JDateChooser fechaMinima;
    private javax.swing.JButton filtraFech;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelPFinal;
    // End of variables declaration//GEN-END:variables
}
